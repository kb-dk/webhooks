<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>${project.name}</display-name>

    <!-- When a new version is needed, make a copy of the servlet and the servlet-mapping for v1,
         then change v1 to v2 in the copy. Also remember to:
         * Create dk.kb.webhooks.webservice.Application_v2
         * Create src/main/openapi/webhooks-openapi_v2.yaml
         * Update pom.xml
         * Update src/main/webapp/api/index.html
          -->
    <servlet>
        <servlet-name>RestServlet_v1</servlet-name>
        <servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
        <init-param>
            <!--Update this to refer to your application-->
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>dk.kb.webhooks.webservice.Application_v1</param-value>
        </init-param>
        <init-param>
            <!--This enables the endpoint /webhooks/openapi.json-->
            <!--This enables the (Swagger UI) endpoint /webhooks/api-docs -->
            <param-name>jaxrs.features</param-name>
            <param-value>org.apache.cxf.jaxrs.openapi.OpenApiFeature</param-value>
        </init-param>

        <init-param>
            <!--Here we override openapi.json and openapi.yaml from the above feature, to serve the static files-->
            <!--THIS IS A HACK. But it seems like the simplest way to recover the original specs-->
            <param-name>static-resources-list</param-name>
            <param-value>
                /webhooks-openapi_.*\..+
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <!--/v1 matches the server url in src/main/openapi/webhooks-openapi_v1.yaml-->
        <servlet-name>RestServlet_v1</servlet-name>
        <url-pattern>/v1/*</url-pattern>
    </servlet-mapping>

    <listener>
        <listener-class>dk.kb.webhooks.webservice.ContextListener</listener-class>
    </listener>
</web-app>
